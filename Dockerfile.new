# Étape 1: Build du frontend
FROM node:14-alpine AS frontend-build

WORKDIR /app

# Copier le script de correction
COPY fix-build.js codegen.js ./

# Copier le frontend
COPY frontend/ ./frontend/

WORKDIR /app/frontend

# Nettoyer le package.json
RUN cat package.json | grep -v "overrides" | grep -v "resolutions" > package.json.clean && \
    mv package.json.clean package.json

# Installer les dépendances et exécuter les corrections
RUN npm install --legacy-peer-deps --no-optional
RUN cd .. && node fix-build.js

# Build du frontend
ENV DISABLE_ESLINT_PLUGIN=true
ENV CI=false
ENV NODE_OPTIONS=--openssl-legacy-provider
RUN npm run build

# Étape 2: Setup du backend
FROM node:18-alpine

WORKDIR /app

# Copier le backend
COPY backend/ ./backend/
COPY package*.json ./

# Installer les dépendances du backend
RUN npm install

# Copier le build du frontend depuis l'étape précédente
COPY --from=frontend-build /app/frontend/build ./frontend/build

# Variables d'environnement
ENV NODE_ENV=production
ENV PORT=5000

# Exposer le port
EXPOSE 5000

# Démarrer l'application
CMD ["node", "backend/server.js"] 